# Microsoft Developer Studio Generated NMAKE File, Based on photoWLv2.dsp
!IF "$(CFG)" == ""
CFG=photoWLv2 - Win32 Debug
!MESSAGE No configuration specified. Defaulting to photoWLv2 - Win32 Debug.
!ENDIF 

!IF "$(CFG)" != "photoWLv2 - Win32 Release" && "$(CFG)" != "photoWLv2 - Win32 Debug"
!MESSAGE Invalid configuration "$(CFG)" specified.
!MESSAGE You can specify a configuration when running NMAKE
!MESSAGE by defining the macro CFG on the command line. For example:
!MESSAGE 
!MESSAGE NMAKE /f "photoWLv2.mak" CFG="photoWLv2 - Win32 Debug"
!MESSAGE 
!MESSAGE Possible choices for configuration are:
!MESSAGE 
!MESSAGE "photoWLv2 - Win32 Release" (based on "Win32 (x86) Console Application")
!MESSAGE "photoWLv2 - Win32 Debug" (based on "Win32 (x86) Console Application")
!MESSAGE 
!ERROR An invalid configuration is specified.
!ENDIF 

!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE 
NULL=nul
!ENDIF 

!IF  "$(CFG)" == "photoWLv2 - Win32 Release"

OUTDIR=.\Release
INTDIR=.\Release
# Begin Custom Macros
OutDir=.\Release
# End Custom Macros

ALL : "$(OUTDIR)\photoWLv2.exe"


CLEAN :
	-@erase "$(INTDIR)\AbsPath.obj"
	-@erase "$(INTDIR)\AbstractGraph.obj"
	-@erase "$(INTDIR)\AbstractPath.obj"
	-@erase "$(INTDIR)\BinaryHeap.obj"
	-@erase "$(INTDIR)\Channel.obj"
	-@erase "$(INTDIR)\Circuit.obj"
	-@erase "$(INTDIR)\Connection.obj"
	-@erase "$(INTDIR)\ConnectionDB.obj"
	-@erase "$(INTDIR)\ConProvisionMain.obj"
	-@erase "$(INTDIR)\Event.obj"
	-@erase "$(INTDIR)\EventList.obj"
	-@erase "$(INTDIR)\Graph.obj"
	-@erase "$(INTDIR)\Lightpath.obj"
	-@erase "$(INTDIR)\Lightpath_Seg.obj"
	-@erase "$(INTDIR)\LightpathDB.obj"
	-@erase "$(INTDIR)\Log.obj"
	-@erase "$(INTDIR)\MappedLinkList.obj"
	-@erase "$(INTDIR)\matrix.obj"
	-@erase "$(INTDIR)\NetMan.obj"
	-@erase "$(INTDIR)\OchException.obj"
	-@erase "$(INTDIR)\OchMemDebug.obj"
	-@erase "$(INTDIR)\OchObject.obj"
	-@erase "$(INTDIR)\OXCNode.obj"
	-@erase "$(INTDIR)\SimplexLink.obj"
	-@erase "$(INTDIR)\Simulator.obj"
	-@erase "$(INTDIR)\TopoReader.obj"
	-@erase "$(INTDIR)\UniFiber.obj"
	-@erase "$(INTDIR)\vc60.idb"
	-@erase "$(INTDIR)\Vertex.obj"
	-@erase "$(INTDIR)\WDMNetwork.obj"
	-@erase "$(OUTDIR)\photoWLv2.exe"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

CPP=cl.exe
CPP_PROJ=/nologo /ML /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D "_MBCS" /Fp"$(INTDIR)\photoWLv2.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 

.c{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.c{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

RSC=rc.exe
BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(OUTDIR)\photoWLv2.bsc" 
BSC32_SBRS= \
	
LINK32=link.exe
LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /incremental:no /pdb:"$(OUTDIR)\photoWLv2.pdb" /machine:I386 /out:"$(OUTDIR)\photoWLv2.exe" 
LINK32_OBJS= \
	"$(INTDIR)\AbsPath.obj" \
	"$(INTDIR)\AbstractGraph.obj" \
	"$(INTDIR)\AbstractPath.obj" \
	"$(INTDIR)\BinaryHeap.obj" \
	"$(INTDIR)\Channel.obj" \
	"$(INTDIR)\Circuit.obj" \
	"$(INTDIR)\Connection.obj" \
	"$(INTDIR)\ConnectionDB.obj" \
	"$(INTDIR)\ConProvisionMain.obj" \
	"$(INTDIR)\Event.obj" \
	"$(INTDIR)\EventList.obj" \
	"$(INTDIR)\Graph.obj" \
	"$(INTDIR)\Lightpath.obj" \
	"$(INTDIR)\Lightpath_Seg.obj" \
	"$(INTDIR)\LightpathDB.obj" \
	"$(INTDIR)\Log.obj" \
	"$(INTDIR)\MappedLinkList.obj" \
	"$(INTDIR)\matrix.obj" \
	"$(INTDIR)\NetMan.obj" \
	"$(INTDIR)\OchException.obj" \
	"$(INTDIR)\OchMemDebug.obj" \
	"$(INTDIR)\OchObject.obj" \
	"$(INTDIR)\OXCNode.obj" \
	"$(INTDIR)\SimplexLink.obj" \
	"$(INTDIR)\Simulator.obj" \
	"$(INTDIR)\TopoReader.obj" \
	"$(INTDIR)\UniFiber.obj" \
	"$(INTDIR)\Vertex.obj" \
	"$(INTDIR)\WDMNetwork.obj"

"$(OUTDIR)\photoWLv2.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
    $(LINK32) @<<
  $(LINK32_FLAGS) $(LINK32_OBJS)
<<

!ELSEIF  "$(CFG)" == "photoWLv2 - Win32 Debug"

OUTDIR=.\Debug
INTDIR=.\Debug
# Begin Custom Macros
OutDir=.\Debug
# End Custom Macros

ALL : "$(OUTDIR)\photoWLv2.exe"


CLEAN :
	-@erase "$(INTDIR)\AbsPath.obj"
	-@erase "$(INTDIR)\AbstractGraph.obj"
	-@erase "$(INTDIR)\AbstractPath.obj"
	-@erase "$(INTDIR)\BinaryHeap.obj"
	-@erase "$(INTDIR)\Channel.obj"
	-@erase "$(INTDIR)\Circuit.obj"
	-@erase "$(INTDIR)\Connection.obj"
	-@erase "$(INTDIR)\ConnectionDB.obj"
	-@erase "$(INTDIR)\ConProvisionMain.obj"
	-@erase "$(INTDIR)\Event.obj"
	-@erase "$(INTDIR)\EventList.obj"
	-@erase "$(INTDIR)\Graph.obj"
	-@erase "$(INTDIR)\Lightpath.obj"
	-@erase "$(INTDIR)\Lightpath_Seg.obj"
	-@erase "$(INTDIR)\LightpathDB.obj"
	-@erase "$(INTDIR)\Log.obj"
	-@erase "$(INTDIR)\MappedLinkList.obj"
	-@erase "$(INTDIR)\matrix.obj"
	-@erase "$(INTDIR)\NetMan.obj"
	-@erase "$(INTDIR)\OchException.obj"
	-@erase "$(INTDIR)\OchMemDebug.obj"
	-@erase "$(INTDIR)\OchObject.obj"
	-@erase "$(INTDIR)\OXCNode.obj"
	-@erase "$(INTDIR)\SimplexLink.obj"
	-@erase "$(INTDIR)\Simulator.obj"
	-@erase "$(INTDIR)\TopoReader.obj"
	-@erase "$(INTDIR)\UniFiber.obj"
	-@erase "$(INTDIR)\vc60.idb"
	-@erase "$(INTDIR)\vc60.pdb"
	-@erase "$(INTDIR)\Vertex.obj"
	-@erase "$(INTDIR)\WDMNetwork.obj"
	-@erase "$(OUTDIR)\photoWLv2.exe"
	-@erase "$(OUTDIR)\photoWLv2.ilk"
	-@erase "$(OUTDIR)\photoWLv2.pdb"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

CPP=cl.exe
CPP_PROJ=/nologo /MLd /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "_MBCS" /Fp"$(INTDIR)\photoWLv2.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c 

.c{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.c{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

RSC=rc.exe
BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(OUTDIR)\photoWLv2.bsc" 
BSC32_SBRS= \
	
LINK32=link.exe
LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /incremental:yes /pdb:"$(OUTDIR)\photoWLv2.pdb" /debug /machine:I386 /out:"$(OUTDIR)\photoWLv2.exe" /pdbtype:sept 
LINK32_OBJS= \
	"$(INTDIR)\AbsPath.obj" \
	"$(INTDIR)\AbstractGraph.obj" \
	"$(INTDIR)\AbstractPath.obj" \
	"$(INTDIR)\BinaryHeap.obj" \
	"$(INTDIR)\Channel.obj" \
	"$(INTDIR)\Circuit.obj" \
	"$(INTDIR)\Connection.obj" \
	"$(INTDIR)\ConnectionDB.obj" \
	"$(INTDIR)\ConProvisionMain.obj" \
	"$(INTDIR)\Event.obj" \
	"$(INTDIR)\EventList.obj" \
	"$(INTDIR)\Graph.obj" \
	"$(INTDIR)\Lightpath.obj" \
	"$(INTDIR)\Lightpath_Seg.obj" \
	"$(INTDIR)\LightpathDB.obj" \
	"$(INTDIR)\Log.obj" \
	"$(INTDIR)\MappedLinkList.obj" \
	"$(INTDIR)\matrix.obj" \
	"$(INTDIR)\NetMan.obj" \
	"$(INTDIR)\OchException.obj" \
	"$(INTDIR)\OchMemDebug.obj" \
	"$(INTDIR)\OchObject.obj" \
	"$(INTDIR)\OXCNode.obj" \
	"$(INTDIR)\SimplexLink.obj" \
	"$(INTDIR)\Simulator.obj" \
	"$(INTDIR)\TopoReader.obj" \
	"$(INTDIR)\UniFiber.obj" \
	"$(INTDIR)\Vertex.obj" \
	"$(INTDIR)\WDMNetwork.obj"

"$(OUTDIR)\photoWLv2.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
    $(LINK32) @<<
  $(LINK32_FLAGS) $(LINK32_OBJS)
<<

!ENDIF 


!IF "$(NO_EXTERNAL_DEPS)" != "1"
!IF EXISTS("photoWLv2.dep")
!INCLUDE "photoWLv2.dep"
!ELSE 
!MESSAGE Warning: cannot find "photoWLv2.dep"
!ENDIF 
!ENDIF 


!IF "$(CFG)" == "photoWLv2 - Win32 Release" || "$(CFG)" == "photoWLv2 - Win32 Debug"
SOURCE=.\AbsPath.cpp

"$(INTDIR)\AbsPath.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\AbstractGraph.cpp

"$(INTDIR)\AbstractGraph.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\AbstractPath.cpp

"$(INTDIR)\AbstractPath.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\BinaryHeap.cpp

"$(INTDIR)\BinaryHeap.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Channel.cpp

"$(INTDIR)\Channel.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Circuit.cpp

"$(INTDIR)\Circuit.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Connection.cpp

"$(INTDIR)\Connection.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\ConnectionDB.cpp

"$(INTDIR)\ConnectionDB.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\ConProvisionMain.cpp

"$(INTDIR)\ConProvisionMain.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Event.cpp

"$(INTDIR)\Event.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\EventList.cpp

"$(INTDIR)\EventList.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Graph.cpp

"$(INTDIR)\Graph.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Lightpath.cpp

"$(INTDIR)\Lightpath.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Lightpath_Seg.cpp

"$(INTDIR)\Lightpath_Seg.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\LightpathDB.cpp

"$(INTDIR)\LightpathDB.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Log.cpp

"$(INTDIR)\Log.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\MappedLinkList.cpp

"$(INTDIR)\MappedLinkList.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\matrix.cpp

"$(INTDIR)\matrix.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\NetMan.cpp

"$(INTDIR)\NetMan.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\OchException.cpp

"$(INTDIR)\OchException.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\OchMemDebug.cpp

"$(INTDIR)\OchMemDebug.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\OchObject.cpp

"$(INTDIR)\OchObject.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\OXCNode.cpp

"$(INTDIR)\OXCNode.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\SimplexLink.cpp

"$(INTDIR)\SimplexLink.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Simulator.cpp

"$(INTDIR)\Simulator.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\TopoReader.cpp

"$(INTDIR)\TopoReader.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\UniFiber.cpp

"$(INTDIR)\UniFiber.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\Vertex.cpp

"$(INTDIR)\Vertex.obj" : $(SOURCE) "$(INTDIR)"


SOURCE=.\WDMNetwork.cpp

"$(INTDIR)\WDMNetwork.obj" : $(SOURCE) "$(INTDIR)"



!ENDIF 

